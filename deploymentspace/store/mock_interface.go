// Code generated by MockGen. DO NOT EDIT.
// Source: interface.go

// Package store is a generated GoMock package.
package store

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"

	gofr "gofr.dev/pkg/gofr"
)

// MockDeploymentSpaceStore is a mock of DeploymentSpaceStore interface.
type MockDeploymentSpaceStore struct {
	ctrl     *gomock.Controller
	recorder *MockDeploymentSpaceStoreMockRecorder
}

// MockDeploymentSpaceStoreMockRecorder is the mock recorder for MockDeploymentSpaceStore.
type MockDeploymentSpaceStoreMockRecorder struct {
	mock *MockDeploymentSpaceStore
}

// NewMockDeploymentSpaceStore creates a new mock instance.
func NewMockDeploymentSpaceStore(ctrl *gomock.Controller) *MockDeploymentSpaceStore {
	mock := &MockDeploymentSpaceStore{ctrl: ctrl}
	mock.recorder = &MockDeploymentSpaceStoreMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDeploymentSpaceStore) EXPECT() *MockDeploymentSpaceStoreMockRecorder {
	return m.recorder
}

// GetByEnvironmentID mocks base method.
func (m *MockDeploymentSpaceStore) GetByEnvironmentID(ctx *gofr.Context, environmentID int) (*DeploymentSpace, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByEnvironmentID", ctx, environmentID)
	ret0, _ := ret[0].(*DeploymentSpace)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByEnvironmentID indicates an expected call of GetByEnvironmentID.
func (mr *MockDeploymentSpaceStoreMockRecorder) GetByEnvironmentID(ctx, environmentID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByEnvironmentID", reflect.TypeOf((*MockDeploymentSpaceStore)(nil).GetByEnvironmentID), ctx, environmentID)
}

// Insert mocks base method.
func (m *MockDeploymentSpaceStore) Insert(ctx *gofr.Context, deploymentSpace *DeploymentSpace) (*DeploymentSpace, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Insert", ctx, deploymentSpace)
	ret0, _ := ret[0].(*DeploymentSpace)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Insert indicates an expected call of Insert.
func (mr *MockDeploymentSpaceStoreMockRecorder) Insert(ctx, deploymentSpace interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Insert", reflect.TypeOf((*MockDeploymentSpaceStore)(nil).Insert), ctx, deploymentSpace)
}
