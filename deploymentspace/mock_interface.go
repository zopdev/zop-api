// Code generated by MockGen. DO NOT EDIT.
// Source: interface.go

// Package deploymentspace is a generated GoMock package.
package deploymentspace

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
	gofr "gofr.dev/pkg/gofr"
)

// MockDeploymentEntity is a mock of DeploymentEntity interface.
type MockDeploymentEntity struct {
	ctrl     *gomock.Controller
	recorder *MockDeploymentEntityMockRecorder
}

// MockDeploymentEntityMockRecorder is the mock recorder for MockDeploymentEntity.
type MockDeploymentEntityMockRecorder struct {
	mock *MockDeploymentEntity
}

// NewMockDeploymentEntity creates a new mock instance.
func NewMockDeploymentEntity(ctrl *gomock.Controller) *MockDeploymentEntity {
	mock := &MockDeploymentEntity{ctrl: ctrl}
	mock.recorder = &MockDeploymentEntityMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDeploymentEntity) EXPECT() *MockDeploymentEntityMockRecorder {
	return m.recorder
}

// Add mocks base method.
func (m *MockDeploymentEntity) Add(ctx *gofr.Context, resource any) (interface{}, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Add", ctx, resource)
	ret0, _ := ret[0].(interface{})
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Add indicates an expected call of Add.
func (mr *MockDeploymentEntityMockRecorder) Add(ctx, resource interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Add", reflect.TypeOf((*MockDeploymentEntity)(nil).Add), ctx, resource)
}

// DuplicateCheck mocks base method.
func (m *MockDeploymentEntity) DuplicateCheck(ctx *gofr.Context, data any) (interface{}, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DuplicateCheck", ctx, data)
	ret0, _ := ret[0].(interface{})
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DuplicateCheck indicates an expected call of DuplicateCheck.
func (mr *MockDeploymentEntityMockRecorder) DuplicateCheck(ctx, data interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DuplicateCheck", reflect.TypeOf((*MockDeploymentEntity)(nil).DuplicateCheck), ctx, data)
}

// FetchByDeploymentSpaceID mocks base method.
func (m *MockDeploymentEntity) FetchByDeploymentSpaceID(ctx *gofr.Context, id int) (interface{}, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FetchByDeploymentSpaceID", ctx, id)
	ret0, _ := ret[0].(interface{})
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FetchByDeploymentSpaceID indicates an expected call of FetchByDeploymentSpaceID.
func (mr *MockDeploymentEntityMockRecorder) FetchByDeploymentSpaceID(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FetchByDeploymentSpaceID", reflect.TypeOf((*MockDeploymentEntity)(nil).FetchByDeploymentSpaceID), ctx, id)
}
