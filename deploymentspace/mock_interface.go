// Code generated by MockGen. DO NOT EDIT.
// Source: interface.go

// Package service is a generated GoMock package.
package deploymentspace

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
	gofr "gofr.dev/pkg/gofr"
)

// MockDeploymentSpace is a mock of DeploymentSpace interface.
type MockDeploymentSpace struct {
	ctrl     *gomock.Controller
	recorder *MockDeploymentSpaceMockRecorder
}

// MockDeploymentSpaceMockRecorder is the mock recorder for MockDeploymentSpace.
type MockDeploymentSpaceMockRecorder struct {
	mock *MockDeploymentSpace
}

// NewMockDeploymentSpace creates a new mock instance.
func NewMockDeploymentSpace(ctrl *gomock.Controller) *MockDeploymentSpace {
	mock := &MockDeploymentSpace{ctrl: ctrl}
	mock.recorder = &MockDeploymentSpaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDeploymentSpace) EXPECT() *MockDeploymentSpaceMockRecorder {
	return m.recorder
}

// Add mocks base method.
func (m *MockDeploymentSpace) Add(ctx *gofr.Context, resource any) (interface{}, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Add", ctx, resource)
	ret0, _ := ret[0].(interface{})
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Add indicates an expected call of Add.
func (mr *MockDeploymentSpaceMockRecorder) Add(ctx, resource interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Add", reflect.TypeOf((*MockDeploymentSpace)(nil).Add), ctx, resource)
}

// FetchByDeploymentSpaceID mocks base method.
func (m *MockDeploymentSpace) FetchByDeploymentSpaceID(ctx *gofr.Context, id int) (interface{}, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FetchByDeploymentSpaceID", ctx, id)
	ret0, _ := ret[0].(interface{})
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FetchByDeploymentSpaceID indicates an expected call of FetchByDeploymentSpaceID.
func (mr *MockDeploymentSpaceMockRecorder) FetchByDeploymentSpaceID(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FetchByDeploymentSpaceID", reflect.TypeOf((*MockDeploymentSpace)(nil).FetchByDeploymentSpaceID), ctx, id)
}
