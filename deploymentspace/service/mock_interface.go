// Code generated by MockGen. DO NOT EDIT.
// Source: interface.go

// Package service is a generated GoMock package.
package service

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"

	gofr "gofr.dev/pkg/gofr"
)

// MockDeploymentSpaceService is a mock of DeploymentSpaceService interface.
type MockDeploymentSpaceService struct {
	ctrl     *gomock.Controller
	recorder *MockDeploymentSpaceServiceMockRecorder
}

// MockDeploymentSpaceServiceMockRecorder is the mock recorder for MockDeploymentSpaceService.
type MockDeploymentSpaceServiceMockRecorder struct {
	mock *MockDeploymentSpaceService
}

// NewMockDeploymentSpaceService creates a new mock instance.
func NewMockDeploymentSpaceService(ctrl *gomock.Controller) *MockDeploymentSpaceService {
	mock := &MockDeploymentSpaceService{ctrl: ctrl}
	mock.recorder = &MockDeploymentSpaceServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDeploymentSpaceService) EXPECT() *MockDeploymentSpaceServiceMockRecorder {
	return m.recorder
}

// Add mocks base method.
func (m *MockDeploymentSpaceService) Add(ctx *gofr.Context, deploymentSpace *DeploymentSpace, environmentID int) (*DeploymentSpace, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Add", ctx, deploymentSpace, environmentID)
	ret0, _ := ret[0].(*DeploymentSpace)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Add indicates an expected call of Add.
func (mr *MockDeploymentSpaceServiceMockRecorder) Add(ctx, deploymentSpace, environmentID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Add", reflect.TypeOf((*MockDeploymentSpaceService)(nil).Add), ctx, deploymentSpace, environmentID)
}

// Fetch mocks base method.
func (m *MockDeploymentSpaceService) Fetch(ctx *gofr.Context, environmentID int) (*DeploymentSpaceResp, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Fetch", ctx, environmentID)
	ret0, _ := ret[0].(*DeploymentSpaceResp)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Fetch indicates an expected call of Fetch.
func (mr *MockDeploymentSpaceServiceMockRecorder) Fetch(ctx, environmentID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Fetch", reflect.TypeOf((*MockDeploymentSpaceService)(nil).Fetch), ctx, environmentID)
}
