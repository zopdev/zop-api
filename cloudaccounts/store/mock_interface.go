// Code generated by MockGen. DO NOT EDIT.
// Source: interface.go

// Package store is a generated GoMock package.
package store

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
	gofr "gofr.dev/pkg/gofr"
)

// MockCloudAccountStore is a mock of CloudAccountStore interface.
type MockCloudAccountStore struct {
	ctrl     *gomock.Controller
	recorder *MockCloudAccountStoreMockRecorder
}

// MockCloudAccountStoreMockRecorder is the mock recorder for MockCloudAccountStore.
type MockCloudAccountStoreMockRecorder struct {
	mock *MockCloudAccountStore
}

// NewMockCloudAccountStore creates a new mock instance.
func NewMockCloudAccountStore(ctrl *gomock.Controller) *MockCloudAccountStore {
	mock := &MockCloudAccountStore{ctrl: ctrl}
	mock.recorder = &MockCloudAccountStoreMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCloudAccountStore) EXPECT() *MockCloudAccountStoreMockRecorder {
	return m.recorder
}

// GetALLCloudAccounts mocks base method.
func (m *MockCloudAccountStore) GetALLCloudAccounts(ctx *gofr.Context) ([]CloudAccount, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetALLCloudAccounts", ctx)
	ret0, _ := ret[0].([]CloudAccount)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetALLCloudAccounts indicates an expected call of GetALLCloudAccounts.
func (mr *MockCloudAccountStoreMockRecorder) GetALLCloudAccounts(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetALLCloudAccounts", reflect.TypeOf((*MockCloudAccountStore)(nil).GetALLCloudAccounts), ctx)
}

// GetCloudAccountByID mocks base method.
func (m *MockCloudAccountStore) GetCloudAccountByID(ctx *gofr.Context, cloudAccountID int) (*CloudAccount, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCloudAccountByID", ctx, cloudAccountID)
	ret0, _ := ret[0].(*CloudAccount)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCloudAccountByID indicates an expected call of GetCloudAccountByID.
func (mr *MockCloudAccountStoreMockRecorder) GetCloudAccountByID(ctx, cloudAccountID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCloudAccountByID", reflect.TypeOf((*MockCloudAccountStore)(nil).GetCloudAccountByID), ctx, cloudAccountID)
}

// GetCloudAccountByProvider mocks base method.
func (m *MockCloudAccountStore) GetCloudAccountByProvider(ctx *gofr.Context, providerType, providerID string) (*CloudAccount, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCloudAccountByProvider", ctx, providerType, providerID)
	ret0, _ := ret[0].(*CloudAccount)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCloudAccountByProvider indicates an expected call of GetCloudAccountByProvider.
func (mr *MockCloudAccountStoreMockRecorder) GetCloudAccountByProvider(ctx, providerType, providerID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCloudAccountByProvider", reflect.TypeOf((*MockCloudAccountStore)(nil).GetCloudAccountByProvider), ctx, providerType, providerID)
}

// GetCredentials mocks base method.
func (m *MockCloudAccountStore) GetCredentials(ctx *gofr.Context, cloudAccountID int64) (interface{}, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCredentials", ctx, cloudAccountID)
	ret0, _ := ret[0].(interface{})
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCredentials indicates an expected call of GetCredentials.
func (mr *MockCloudAccountStoreMockRecorder) GetCredentials(ctx, cloudAccountID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCredentials", reflect.TypeOf((*MockCloudAccountStore)(nil).GetCredentials), ctx, cloudAccountID)
}

// InsertCloudAccount mocks base method.
func (m *MockCloudAccountStore) InsertCloudAccount(ctx *gofr.Context, config *CloudAccount) (*CloudAccount, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InsertCloudAccount", ctx, config)
	ret0, _ := ret[0].(*CloudAccount)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// InsertCloudAccount indicates an expected call of InsertCloudAccount.
func (mr *MockCloudAccountStoreMockRecorder) InsertCloudAccount(ctx, config interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InsertCloudAccount", reflect.TypeOf((*MockCloudAccountStore)(nil).InsertCloudAccount), ctx, config)
}
